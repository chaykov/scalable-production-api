name: Tests

on:
  push:
    branches: [main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          DATABASE_URL: postgres://test:test@localhost:5432/testdb
          JWT_SECRET: test-jwt-secret-for-ci
          ARCJET_KEY: test-arcjet-key
        run: |
          if ! npm test -- --coverage --coverageReporters=text-lcov --coverageReporters=json-summary; then
            echo "::error::Tests failed. Please check the test output above for details."
            exit 1
          fi
        continue-on-error: false

      - name: Generate test summary
        if: always()
        run: |
          if [ -f coverage/coverage-summary.json ]; then
            echo "## Test Results 📊" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract coverage data
            LINES_PCT=$(cat coverage/coverage-summary.json | grep -o '"lines":{[^}]*}' | grep -o '"pct":[0-9.]*' | cut -d':' -f2)
            FUNCTIONS_PCT=$(cat coverage/coverage-summary.json | grep -o '"functions":{[^}]*}' | grep -o '"pct":[0-9.]*' | cut -d':' -f2)
            BRANCHES_PCT=$(cat coverage/coverage-summary.json | grep -o '"branches":{[^}]*}' | grep -o '"pct":[0-9.]*' | cut -d':' -f2)
            STATEMENTS_PCT=$(cat coverage/coverage-summary.json | grep -o '"statements":{[^}]*}' | grep -o '"pct":[0-9.]*' | cut -d':' -f2)
            
            echo "| Metric | Coverage |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|----------|" >> $GITHUB_STEP_SUMMARY
            echo "| Lines | ${LINES_PCT}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Functions | ${FUNCTIONS_PCT}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Branches | ${BRANCHES_PCT}% |" >> $GITHUB_STEP_SUMMARY
            echo "| Statements | ${STATEMENTS_PCT}% |" >> $GITHUB_STEP_SUMMARY
          else
            echo "## Test Results ❌" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Coverage report not found. Tests may have failed." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: coverage/
          retention-days: 30

      - name: Annotate test failures
        if: failure()
        run: |
          echo "::error::Test suite failed. Please review the test output and fix failing tests."
          echo "::notice::Coverage reports have been uploaded as artifacts for analysis."